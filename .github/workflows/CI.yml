# This file is autogenerated by maturin v0.15.1
# To update, run
#
#    maturin generate-ci github
#
name: CI

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          working-directory: savant
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: savant/dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          working-directory: savant
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: savant/dist

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build dist (no release)
        uses: PyO3/maturin-action@v1
        with:
          working-directory: savant
          args: --out dist
      - name: Install dependencies
        run: pip install -r docs/requirements.txt
      - name: Install savant_rs
        run: pip install savant/dist/*.whl
      - name: Build docs
        run: |
          cd docs
          make clean html
          cp -r ./build/html/* /html
          cd build
          tar \
          --dereference --hard-dereference \
          --directory html -cvf artifact.tar .
      - name: Upload artifact
        uses: actions/upload-artifact@main
        with:
          name: github-pages
          path: /html/artifact.tar
          if-no-files-found: error

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, sdist]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
